services:
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    # hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - wiki
  kafka:
    image: confluentinc/cp-kafka:7.1.0
    # hostname: kafka
    container_name: kafka
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
    depends_on:
      [zookeeper]
    healthcheck: {test: nc -z localhost 9092, interval: 1s, start_period: 120s}
    networks:
      - wiki
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.1.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
      # - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      # CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      # CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
  pinot-controller:
    image: apachepinot/pinot:0.10.0
    command: "StartController -zkAddress zookeeper:2181 -dataDir /data"
    container_name: "pinot-controller"
    volumes:
      - ./config:/config
      - ./data:/data
    restart: unless-stopped
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
    networks:
      - wiki
  pinot-broker:
    image: apachepinot/pinot:0.10.0
    command: "StartBroker -zkAddress zookeeper:2181"
    restart: unless-stopped
    container_name: "pinot-broker"
    volumes:
      - ./config:/config
    ports:
      - "8099:8099"
    depends_on:
      - pinot-controller
    networks:
      - wiki
  pinot-server:
    image: apachepinot/pinot:0.10.0
    container_name: "pinot-server-wiki"
    command: "StartServer -zkAddress zookeeper:2181"
    volumes:
      - ./config:/config
    restart: unless-stopped
    depends_on:
      - pinot-broker
    networks:
      - wiki
  pinot-add-table:
      image: apachepinot/pinot:0.10.0
      container_name: "pinot-add-table-wiki"
      volumes:
        - ./config:/config
      command: "'./bin/pinot-admin.sh AddTable -schemaFile /config/schema.json -tableConfigFile /config/table.json -controllerHost pinot-controller -exec'"
      restart: on-failure
      entrypoint: "bash -c"
      environment:
      - "JAVA_OPTS=-Dpinot.admin.system.exit=true"
      depends_on:
        - pinot-controller
      networks:
        - wiki
  wiki-stream:
    build: wiki_stream
    restart: unless-stopped
    container_name: wiki_stream
    depends_on:
      - kafka
      - zookeeper
    volumes:
      - ./wiki_stream/wiki_to_kafka.py:/workdir/wiki_to_kafka.py
    networks:
      - wiki
  dashboard:
    build: dashboard
    restart: unless-stopped
    container_name: dashboard
    ports:
      - "8501:8501"
    depends_on:
      - pinot-controller
    volumes:
      - ./dashboard/app.py:/workdir/app.py
    environment:
      - PINOT_SERVER
      - PINOT_PORT
    networks:
      - wiki


networks:
  wiki:
    name: "wiki"